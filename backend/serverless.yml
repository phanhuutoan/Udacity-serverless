org: tony051200
app: serverless-todo-app
service: serverless-todo-app

plugins:
  - serverless-iam-roles-per-function

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: 'us-east-1'
  environment:
      TODOS_TABLE: Todos-${self:provider.stage}
      TODOS_CREATED_AT_INDEX: CreatedAtIndex

functions:
  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler

  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          method: get
          path: todos
          cors: true
          authorizer: Auth
    iamRoleStatementsInherit: true
    # iamRoleStatements:
    #   - Effect: Allow
    #     Action:
    #       - dynamodb:GetItem
    #       - dynamodb:UpdateItem
    #       - dynamodb:PutItem
    #     Resource: arn:aws:dynamodb:${self:provider.environment.TODOS_TABLE}

  CreateTodo:
    handler: src/lambda/http/createTodo.handler
    events:
      - http:
          method: post
          path: todos
          cors: true

#   # TODO: Configure this function
#   UpdateTodo:
#     handler: src/lambda/http/updateTodo.handler
#     events:
#       - http:
#           method: patch
#           path: todos/{todoId}

#   # TODO: Configure this function
#   DeleteTodo:
#     handler: src/lambda/http/deleteTodo.handler
#     events:
#       - http:
#           method: delete
#           path: todos/{todoId}

#   # TODO: Configure this function
#   GenerateUploadUrl:
#     handler: src/lambda/http/generateUploadUrl.handler
#     events:
#       - http:
#           method: post
#           path: todos/{todoId}/attachment

resources:
  Resources:
    TodosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: todoId
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
        KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: todoId
          KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.TODOS_TABLE}
        LocalSecondaryIndexes:
        - IndexName: ${self:provider.environment.TODOS_CREATED_AT_INDEX}
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL # What attributes will be copied to an index
    